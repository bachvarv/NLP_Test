
================
== TensorFlow ==
================

NVIDIA Release 22.03-tf2 (build 33659467)
TensorFlow Version 2.8.0

Container image Copyright (c) 2022, NVIDIA CORPORATION & AFFILIATES. All rights reserved.
Copyright 2017-2022 The TensorFlow Authors.  All rights reserved.

Various files include modifications (c) NVIDIA CORPORATION & AFFILIATES.  All rights reserved.

This container image and its contents are governed by the NVIDIA Deep Learning Container License.
By pulling and using the container, you accept the terms and conditions of this license:
https://developer.nvidia.com/ngc/nvidia-deep-learning-container-license

NOTE: CUDA Forward Compatibility mode ENABLED.
  Using CUDA 11.6 driver version 510.47.03 with kernel driver version 470.82.01.
  See https://docs.nvidia.com/deploy/cuda-compatibility/ for details.

Initializing from scratch!
(1, 128)
tf.Tensor(
[[14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
  14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
  14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
  14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
  14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
  14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
  14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
  14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
  14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
  14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
  14076 14076 14076 14076 14076 14076 14076 14076]], shape=(1, 128), dtype=int64)
tf.Tensor([0], shape=(1,), dtype=int64)
[ P A D ]
Model: "nmt_model"
_________________________________________________________________
 Layer (type)                Output Shape              Param #   
=================================================================
 tf_bert_model (TFBertModel)  multiple                 109081344 
                                                                 
 embedding (Embedding)       multiple                  0 (unused)
                                                                 
 nmt_encoder_layer (NMTEncod  multiple                 6300928   
 erLayer)                                                        
                                                                 
 nmt_encoder_layer_1 (NMTEnc  multiple                 6300928   
 oderLayer)                                                      
                                                                 
 nmt_encoder_layer_2 (NMTEnc  multiple                 6300928   
 oderLayer)                                                      
                                                                 
 nmt_encoder_layer_3 (NMTEnc  multiple                 6300928   
 oderLayer)                                                      
                                                                 
 nmt_encoder_layer_4 (NMTEnc  multiple                 6300928   
 oderLayer)                                                      
                                                                 
 nmt_encoder_layer_5 (NMTEnc  multiple                 6300928   
 oderLayer)                                                      
                                                                 
 nmt_encoder_layer_6 (NMTEnc  multiple                 6300928   
 oderLayer)                                                      
                                                                 
 nmt_encoder_layer_7 (NMTEnc  multiple                 6300928   
 oderLayer)                                                      
                                                                 
 nmt_encoder_layer_8 (NMTEnc  multiple                 6300928   
 oderLayer)                                                      
                                                                 
 nmt_encoder_layer_9 (NMTEnc  multiple                 6300928   
 oderLayer)                                                      
                                                                 
 nmt_encoder_layer_10 (NMTEn  multiple                 6300928   
 coderLayer)                                                     
                                                                 
 nmt_encoder_layer_11 (NMTEn  multiple                 6300928   
 coderLayer)                                                     
                                                                 
 embedding_1 (Embedding)     multiple                  23040000  
                                                                 
 nmt_decoder_layer (NMTDecod  multiple                 8666368   
 erLayer)                                                        
                                                                 
 nmt_decoder_layer_1 (NMTDec  multiple                 8666368   
 oderLayer)                                                      
                                                                 
 nmt_decoder_layer_2 (NMTDec  multiple                 8666368   
 oderLayer)                                                      
                                                                 
 nmt_decoder_layer_3 (NMTDec  multiple                 8666368   
 oderLayer)                                                      
                                                                 
 nmt_decoder_layer_4 (NMTDec  multiple                 8666368   
 oderLayer)                                                      
                                                                 
 nmt_decoder_layer_5 (NMTDec  multiple                 8666368   
 oderLayer)                                                      
                                                                 
 nmt_decoder_layer_6 (NMTDec  multiple                 8666368   
 oderLayer)                                                      
                                                                 
 nmt_decoder_layer_7 (NMTDec  multiple                 8666368   
 oderLayer)                                                      
                                                                 
 nmt_decoder_layer_8 (NMTDec  multiple                 8666368   
 oderLayer)                                                      
                                                                 
 nmt_decoder_layer_9 (NMTDec  multiple                 8666368   
 oderLayer)                                                      
                                                                 
 nmt_decoder_layer_10 (NMTDe  multiple                 8666368   
 coderLayer)                                                     
                                                                 
 nmt_decoder_layer_11 (NMTDe  multiple                 8666368   
 coderLayer)                                                     
                                                                 
 dense_288 (Dense)           multiple                  23070000  
                                                                 
 softmax (Softmax)           multiple                  0         
                                                                 
=================================================================
Total params: 334,798,896
Trainable params: 334,798,896
Non-trainable params: 0
_________________________________________________________________
(1, 128)
tf.Tensor([0], shape=(1,), dtype=int64)
[ P A D ]
Output [14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076]
tf.Tensor([b'Herr oder Frau.\n'], shape=(1,), dtype=string)
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Output [14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076]
tf.Tensor([b'Staatsangeh\xc3\xb6rigkeit (Von welchem Land haben Sie einen Pass?)\n'], shape=(1,), dtype=string)
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Output [14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076]
tf.Tensor([b'Wohnen Sie bei einer anderen Person in der Wohnung? Wenn ja, wie hei\xc3\x9ft diese Person?\n'], shape=(1,), dtype=string)
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Output [14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076]
tf.Tensor([b'Gef\xc3\xa4ngnis.\n'], shape=(1,), dtype=string)
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Output [14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076]
tf.Tensor([b'Sie werden dort von - bis leben.\n'], shape=(1,), dtype=string)
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Output [14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076]
tf.Tensor([b'"Personen, mit denen Sie zusammenleben. Diese Personen sind Ihre Partnerin/Ihr Partner und/oder Verwandte von Ihnen (""Bedarfsgemeinschaft"")."\n'], shape=(1,), dtype=string)
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Output [14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076]
tf.Tensor([b'Haben Sie ein Recht, finanzielle Hilfen von anderen Institutionen zu bekommen?\n'], shape=(1,), dtype=string)
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Output [14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076]
tf.Tensor([b'Gesellschaft f\xc3\xbcr alle\n'], shape=(1,), dtype=string)
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Output [14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076]
tf.Tensor([b'Staat, der gut helfen kann\n'], shape=(1,), dtype=string)
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Output [14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076]
tf.Tensor([b'starkes Europa\n'], shape=(1,), dtype=string)
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Output [14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076]
tf.Tensor([b'Der Bundes-Tag ist eine gro\xc3\x9fe Gruppe von Frauen und M\xc3\xa4nnern, die Abgeordnete hei\xc3\x9fen.\n'], shape=(1,), dtype=string)
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Output [14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076]
tf.Tensor([b'Wir denken: Man muss alle Aufgaben zusammen anschauen. Der Grund daf\xc3\xbcr ist: Die meisten Aufgaben h\xc3\xa4ngen zusammen. Nur so kann man wirklich gute L\xc3\xb6sungen finden. Olaf Scholz wird gute L\xc3\xb6sungen finden. Davon sind wir \xc3\xbcberzeugt. Olaf Scholz ist unser Kanzler-Kandidat.\n'], shape=(1,), dtype=string)
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Output [14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076]
tf.Tensor([b'Pflegerinnen und Pfleger sollen einen besseren Lohn bekommen.\n'], shape=(1,), dtype=string)
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Output [14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076]
tf.Tensor([b'Man muss von dem Geld leben k\xc3\xb6nnen. Egal, was man f\xc3\xbcr eine Arbeit macht\n'], shape=(1,), dtype=string)
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
Output [14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076 14076
 14076 14076 14076 14076 14076 14076 14076 14076]
tf.Tensor([b'Wir machen in Europa viele Dinge richtig. Aber viele Aufgaben sind auch f\xc3\xbcr die ganze Welt wichtig. Auch diese Aufgaben m\xc3\xbcssen wir zusammen l\xc3\xb6sen.\n'], shape=(1,), dtype=string)
[2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2]
