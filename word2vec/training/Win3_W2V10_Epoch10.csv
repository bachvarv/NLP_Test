key,value
bulgaria,"tf.Tensor(
[ 0.03576368  0.0975259  -0.06585002 -0.01508494  0.05972364  0.02317775
 -0.04629162 -0.07139595  0.00709591  0.0973398 ], shape=(10,), dtype=float32)"
bulgarian,"tf.Tensor(
[-0.07019585 -0.00769291  0.02626016 -0.02804703 -0.00789709 -0.01913609
  0.02687374 -0.03953451 -0.02721939  0.067531  ], shape=(10,), dtype=float32)"
българия,"tf.Tensor(
[ 0.03822897  0.04790528 -0.00307737  0.08108085  0.02409143  0.00826451
  0.06474058 -0.02417181 -0.03413042 -0.0010444 ], shape=(10,), dtype=float32)"
romanized,"tf.Tensor(
[-0.14115551  0.03427149 -0.0097128  -0.04650386 -0.08957249  0.01558046
  0.00640585 -0.00663014  0.08879669 -0.01590847], shape=(10,), dtype=float32)"
balgariya,"tf.Tensor(
[-0.05274604 -0.02292168 -0.03250048 -0.01087516 -0.05386221  0.03093606
  0.04083064  0.00322796 -0.06097432  0.02617922], shape=(10,), dtype=float32)"
officially,"tf.Tensor(
[ 0.02661172 -0.03327751  0.00207348  0.03634739 -0.03993135  0.07617781
 -0.00733562 -0.0021027   0.00635108 -0.0328511 ], shape=(10,), dtype=float32)"
the,"tf.Tensor(
[ 0.03592577 -0.00570796 -0.01274938 -0.05610241  0.05317821  0.01692657
 -0.02391864  0.04418608  0.07879993  0.06213634], shape=(10,), dtype=float32)"
republic,"tf.Tensor(
[ 0.0716714   0.01176354  0.06727327 -0.01147988 -0.0676674  -0.04798461
 -0.13234504 -0.03613119  0.02696855 -0.0300389 ], shape=(10,), dtype=float32)"
of,"tf.Tensor(
[ 3.6810871e-02 -2.0736124e-02  1.5046070e-02 -4.3198567e-02
 -1.2251962e-02 -2.1250064e-02  5.0540231e-02 -2.4985101e-03
  9.0481219e-05  2.4238674e-02], shape=(10,), dtype=float32)"
република,"tf.Tensor(
[ 0.06987107  0.01186093 -0.05527113 -0.03263998  0.07569239 -0.00111816
  0.00996087 -0.0420341   0.04170804  0.03665994], shape=(10,), dtype=float32)"
republika,"tf.Tensor(
[-0.05748761  0.01939181  0.0039344  -0.07166452  0.02025341 -0.08086385
 -0.10696623  0.13287541 -0.00585285  0.01337544], shape=(10,), dtype=float32)"
ipa,"tf.Tensor(
[-0.04944721 -0.03758145 -0.03670609  0.00086199  0.01441614  0.00664808
 -0.0611049  -0.01920792 -0.02110331 -0.01441404], shape=(10,), dtype=float32)"
rɛˈpublikɐ,"tf.Tensor(
[ 0.04416703 -0.08636064  0.06663172  0.01134264  0.02336154 -0.0214567
  0.02454719 -0.03797499 -0.05140041 -0.04218423], shape=(10,), dtype=float32)"
bɐɫˈɡarijɐ,"tf.Tensor(
[ 0.07230027 -0.01015052 -0.03698779  0.02685334 -0.09477593  0.00028048
 -0.012753    0.02917323 -0.17789343 -0.01038541], shape=(10,), dtype=float32)"
is,"tf.Tensor(
[-0.06115798  0.01183442  0.03103624 -0.00018933 -0.10950775 -0.04441185
  0.01989255  0.01194019  0.01095932  0.02953684], shape=(10,), dtype=float32)"
a,"tf.Tensor(
[-0.1284233  -0.02518137 -0.01384498  0.01402291 -0.05796291 -0.10267404
  0.00928932  0.10101279  0.11770496  0.06123307], shape=(10,), dtype=float32)"
country,"tf.Tensor(
[-0.04106405  0.06474461  0.07988765  0.07224901 -0.03169815 -0.02226418
  0.08386116 -0.01440272  0.04545409  0.02459665], shape=(10,), dtype=float32)"
in,"tf.Tensor(
[ 0.01113508 -0.09070624  0.06390689  0.01884748  0.03911754 -0.00113704
  0.04766113  0.05261179  0.00067102 -0.0254659 ], shape=(10,), dtype=float32)"
southeast,"tf.Tensor(
[-3.8475543e-02 -5.5740464e-02 -5.5970833e-02 -3.8412604e-03
 -5.4531507e-02 -5.3297617e-02 -6.1294790e-02 -1.9745477e-02
  2.6351210e-05 -1.7227630e-04], shape=(10,), dtype=float32)"
europe,"tf.Tensor(
[-0.03905274 -0.03264292  0.04850796  0.03503547 -0.05659195 -0.01867024
  0.02364978 -0.04041092  0.05151203  0.01181225], shape=(10,), dtype=float32)"
it,"tf.Tensor(
[-0.05510443  0.04981792 -0.0581316   0.08018427  0.0079799   0.02529296
 -0.00722853 -0.00115401  0.02040398 -0.04213834], shape=(10,), dtype=float32)"
bordered,"tf.Tensor(
[-0.01719513 -0.06262448 -0.0879065  -0.023301    0.05925668  0.01582745
  0.02538892 -0.02459487  0.107993   -0.01347232], shape=(10,), dtype=float32)"
by,"tf.Tensor(
[ 0.0206698   0.06326893  0.05527882  0.00515552 -0.02955277 -0.05394743
 -0.01943895  0.03451595  0.0581383   0.00785727], shape=(10,), dtype=float32)"
romania,"tf.Tensor(
[ 0.00915887  0.02018159  0.0602651  -0.03801702 -0.03618914  0.03880121
 -0.04453098  0.03205746 -0.05089075 -0.00829843], shape=(10,), dtype=float32)"
to,"tf.Tensor(
[ 0.09893408 -0.00472608  0.02494238 -0.07391115 -0.00967983  0.03715619
 -0.05387008 -0.0531164  -0.05880119  0.01420837], shape=(10,), dtype=float32)"
north,"tf.Tensor(
[ 0.01765896  0.03827007 -0.02286778 -0.00451097 -0.03542501  0.01901272
 -0.00736175 -0.05213204  0.08285154  0.07264672], shape=(10,), dtype=float32)"
serbia,"tf.Tensor(
[ 0.03859005  0.01604872 -0.06980611  0.02438396 -0.02510516  0.03492175
 -0.0442038  -0.0012843   0.11300515  0.11382828], shape=(10,), dtype=float32)"
and,"tf.Tensor(
[-0.08139281 -0.0009411  -0.06871478  0.06193358 -0.00559399  0.08246339
  0.04933641 -0.04139284  0.01933829  0.03836845], shape=(10,), dtype=float32)"
macedonia,"tf.Tensor(
[-0.08339331  0.06292382 -0.00211064  0.03582967 -0.03922119  0.05266284
  0.07368998 -0.02417152  0.09358042  0.03828157], shape=(10,), dtype=float32)"
west,"tf.Tensor(
[ 0.03786889 -0.0253828   0.03835628  0.02807112 -0.03608415  0.00337714
 -0.02752297 -0.02831684  0.07505284 -0.00800229], shape=(10,), dtype=float32)"
greece,"tf.Tensor(
[-0.01340458 -0.03689032 -0.02564123  0.01452299  0.15077414 -0.004437
  0.05936963 -0.01876072 -0.01197039 -0.01458255], shape=(10,), dtype=float32)"
turkey,"tf.Tensor(
[-0.02819657  0.03153543 -0.0138456  -0.04434042 -0.02987927 -0.01409775
  0.04332874 -0.01756123 -0.10723384 -0.05413851], shape=(10,), dtype=float32)"
south,"tf.Tensor(
[-0.03153953 -0.06242612 -0.05281892 -0.06137065 -0.07507315  0.04841849
 -0.04418945  0.01429277  0.03384152 -0.11974298], shape=(10,), dtype=float32)"
black,"tf.Tensor(
[-0.13063554  0.07362799  0.09305862 -0.06720909  0.05404986 -0.02573742
  0.01531334  0.06721189  0.13726372 -0.00582641], shape=(10,), dtype=float32)"
sea,"tf.Tensor(
[ 0.01986774 -0.01068468 -0.09271894 -0.09325204  0.0204743  -0.07323536
 -0.01133361 -0.01803855  0.09126142  0.04149785], shape=(10,), dtype=float32)"
east,"tf.Tensor(
[ 0.03010916  0.08462479 -0.01556004  0.06765383 -0.01643257 -0.05441274
  0.01698089  0.08379286  0.01493861  0.01863708], shape=(10,), dtype=float32)"
capital,"tf.Tensor(
[-0.00129087 -0.00195913 -0.05638737  0.01267766  0.03865679 -0.03617754
  0.00460995  0.06808988 -0.0238417  -0.03239408], shape=(10,), dtype=float32)"
largest,"tf.Tensor(
[ 0.03202791  0.04764     0.05416421 -0.07131583  0.02150051  0.01304715
  0.04112038  0.00351037  0.01316776 -0.01411316], shape=(10,), dtype=float32)"
city,"tf.Tensor(
[ 0.0561661   0.04411126  0.00446702 -0.07503689 -0.04351311 -0.08896198
 -0.01254161 -0.11805997  0.02675932 -0.03391683], shape=(10,), dtype=float32)"
sofia,"tf.Tensor(
[-0.00576559  0.11259072  0.00759119  0.02566203  0.04340403  0.02672717
  0.00112718 -0.02180842 -0.00288315 -0.02453513], shape=(10,), dtype=float32)"
other,"tf.Tensor(
[ 0.06870119 -0.02269442 -0.00443976  0.00821704 -0.05959744  0.02456835
  0.06168611  0.00283886  0.00095553  0.02160832], shape=(10,), dtype=float32)"
major,"tf.Tensor(
[ 0.05463858 -0.03378042  0.0136521  -0.06907555  0.01811169 -0.00588205
 -0.01019549 -0.02616786 -0.05452118  0.01736138], shape=(10,), dtype=float32)"
cities,"tf.Tensor(
[ 0.01497766 -0.05901117 -0.00325401  0.07406595  0.04145111 -0.09104116
 -0.05624476  0.02818952 -0.05159201  0.03204684], shape=(10,), dtype=float32)"
are,"tf.Tensor(
[-0.07728285  0.00999928 -0.01164992 -0.08420127  0.04272271 -0.0040302
  0.04944982  0.0549506   0.02998845 -0.01258588], shape=(10,), dtype=float32)"
plovdiv,"tf.Tensor(
[ 0.03973943  0.02730293 -0.0607822   0.02228747 -0.08707     0.02306633
 -0.01082377 -0.13320172 -0.00375487 -0.05185775], shape=(10,), dtype=float32)"
varna,"tf.Tensor(
[ 0.08030124  0.04131441 -0.07167204 -0.00350251 -0.00996287 -0.05676021
  0.09478182 -0.01658882  0.09101663  0.09160382], shape=(10,), dtype=float32)"
burgas,"tf.Tensor(
[ 0.08634324  0.06507356 -0.0847152  -0.03584809 -0.04644181 -0.06622846
  0.05839989 -0.0366638   0.05624361 -0.07709841], shape=(10,), dtype=float32)"
with,"tf.Tensor(
[ 0.04540828  0.01482204 -0.00783918  0.02498764 -0.01475693  0.10279354
 -0.05896623  0.01589752 -0.02068236  0.02334234], shape=(10,), dtype=float32)"
territory,"tf.Tensor(
[-0.0312337  -0.04330239 -0.01116012 -0.07776093  0.08934527  0.0362442
 -0.03637263  0.0379381  -0.11604603 -0.01801818], shape=(10,), dtype=float32)"
110994,"tf.Tensor(
[ 0.07501832  0.05651818 -0.02884665 -0.03708547 -0.1820728   0.04131026
 -0.08032894 -0.04240568 -0.01327872  0.00473471], shape=(10,), dtype=float32)"
square,"tf.Tensor(
[-0.00663907 -0.0152516   0.08087314 -0.04597704  0.01292666  0.01451424
 -0.00695526  0.03751795  0.06508546  0.00881314], shape=(10,), dtype=float32)"
kilometres,"tf.Tensor(
[-0.00039533  0.00980603 -0.00659954  0.00725742 -0.00523894  0.05163286
  0.00814021  0.00641442  0.02557007  0.10312109], shape=(10,), dtype=float32)"
42855,"tf.Tensor(
[ 0.04811389 -0.04038725 -0.00879687  0.04508169  0.0824347   0.02648501
  0.05609314 -0.03595297  0.03487455  0.0121297 ], shape=(10,), dtype=float32)"
sq,"tf.Tensor(
[ 0.06830533  0.05161882 -0.07694817 -0.00482285 -0.06615362  0.07961304
 -0.04783363 -0.04126212 -0.03468247  0.01382767], shape=(10,), dtype=float32)"
mi,"tf.Tensor(
[ 0.06315553  0.01185662  0.02860765  0.0267487  -0.00495053  0.05589591
  0.04260468  0.0426092   0.12841478  0.00183581], shape=(10,), dtype=float32)"
europes,"tf.Tensor(
[ 0.06619194 -0.00570865  0.10828511  0.03316227  0.00975868 -0.03949117
  0.04148441 -0.03658164  0.1176655   0.0535394 ], shape=(10,), dtype=float32)"
16thlargest,"tf.Tensor(
[ 0.01014594 -0.01615444 -0.00745692 -0.0189028  -0.01934996 -0.02127272
 -0.07060658  0.04592043 -0.02396971  0.00997779], shape=(10,), dtype=float32)"
,"tf.Tensor(
[ 0.08348145  0.02919306  0.07166723  0.0185376  -0.04038858 -0.03028128
  0.01147464 -0.05859123 -0.02398954  0.0766966 ], shape=(10,), dtype=float32)"
one,"tf.Tensor(
[ 0.03697962  0.04845534  0.03971239 -0.0469849  -0.11331377  0.08892269
  0.02682256 -0.00781238  0.05058905 -0.00201401], shape=(10,), dtype=float32)"
earliest,"tf.Tensor(
[-0.01773629 -0.01916121  0.09008893 -0.03869983  0.05929723 -0.07982452
 -0.0215274  -0.00499625 -0.02601405 -0.01006245], shape=(10,), dtype=float32)"
societies,"tf.Tensor(
[-0.01688111  0.01298619  0.01647064  0.01505373  0.03003732  0.00550836
  0.00674399  0.02219782 -0.02287257 -0.03277816], shape=(10,), dtype=float32)"
lands,"tf.Tensor(
[ 0.01046437  0.01380585 -0.03131279  0.06394966  0.07865627 -0.05725922
 -0.01550767  0.06350229  0.02979163 -0.06741616], shape=(10,), dtype=float32)"
modernday,"tf.Tensor(
[-0.02086184  0.00938474 -0.06495129  0.04245684 -0.00824384  0.05072421
 -0.02274707  0.01322778  0.00614878 -0.03954648], shape=(10,), dtype=float32)"
was,"tf.Tensor(
[-0.12707186  0.00809556 -0.00434795  0.02243696  0.02277614 -0.01310999
 -0.00797818  0.0129524   0.00153929 -0.10354269], shape=(10,), dtype=float32)"
neolithic,"tf.Tensor(
[ 0.03628189  0.04802348 -0.01671415  0.03585338  0.027137    0.00723175
 -0.00986514 -0.01353237  0.04540612 -0.04073526], shape=(10,), dtype=float32)"
karanovo,"tf.Tensor(
[-0.03947829 -0.04071844  0.0017531   0.01138295  0.02999924  0.01691646
  0.00950061  0.01839585 -0.01391028 -0.01144743], shape=(10,), dtype=float32)"
culture,"tf.Tensor(
[-0.00378875  0.11414453 -0.06021967  0.01193015  0.02748724  0.01751716
  0.01622249 -0.05192696 -0.00159649 -0.00529036], shape=(10,), dtype=float32)"
which,"tf.Tensor(
[ 0.07476625 -0.01744096 -0.01160578  0.00069336  0.093846    0.03048032
 -0.00937895  0.02898845  0.01593255  0.02995849], shape=(10,), dtype=float32)"
dates,"tf.Tensor(
[ 0.09631988 -0.02478411  0.06729383  0.04952233  0.02757667 -0.04711057
  0.01331852 -0.02263387 -0.03110085  0.02872233], shape=(10,), dtype=float32)"
back,"tf.Tensor(
[-0.13051403 -0.0597687  -0.03536642 -0.08158215  0.04008376  0.04163219
  0.02116353  0.13743742 -0.0653782  -0.02855986], shape=(10,), dtype=float32)"
6500,"tf.Tensor(
[-0.0513005  -0.04928655 -0.03697217 -0.01371364  0.01941027  0.01204327
 -0.01222895  0.01050373 -0.07220165  0.00071603], shape=(10,), dtype=float32)"
bc,"tf.Tensor(
[-0.0380149  -0.0413532   0.00685959 -0.00793511 -0.03138422 -0.06991971
 -0.01625375 -0.01959994  0.02578053  0.02236794], shape=(10,), dtype=float32)"
6th,"tf.Tensor(
[ 0.06923107 -0.0691346   0.03415466 -0.02080293  0.01784647  0.03861912
 -0.03178282  0.01448578  0.00285937 -0.05629857], shape=(10,), dtype=float32)"
3rd,"tf.Tensor(
[ 0.03026613  0.09813337  0.03717585 -0.00304075 -0.08928385  0.03124596
 -0.02105801 -0.0111022  -0.04696236 -0.07906339], shape=(10,), dtype=float32)"
century,"tf.Tensor(
[-1.4653654e-02 -4.4816781e-05 -2.8936097e-02  2.3481244e-02
 -3.8484812e-02  8.5929513e-02 -5.3275675e-02  1.7728891e-02
  4.3014560e-02 -2.6331913e-02], shape=(10,), dtype=float32)"
region,"tf.Tensor(
[-0.01888336  0.06690303  0.00018062  0.0235252   0.0499322  -0.0451666
  0.02630075  0.00787606 -0.02592124 -0.02696723], shape=(10,), dtype=float32)"
battleground,"tf.Tensor(
[-0.09400155  0.03864847  0.03933035  0.0271791  -0.09981006 -0.0792359
 -0.04732163 -0.00081985 -0.01295282  0.00212588], shape=(10,), dtype=float32)"
for,"tf.Tensor(
[ 0.02248041  0.06037674  0.00390899  0.04506934  0.07500538 -0.03363586
 -0.03831215 -0.07485837 -0.01707415 -0.0289842 ], shape=(10,), dtype=float32)"
thracians,"tf.Tensor(
[-0.00886354  0.03640014  0.06578303 -0.10964439 -0.00286384  0.05358304
  0.03933024 -0.02624867  0.06510501 -0.03917582], shape=(10,), dtype=float32)"
persians,"tf.Tensor(
[-0.01347855 -0.02737907 -0.03161648  0.0002328   0.00544995 -0.04012747
  0.0033029   0.02751794 -0.04308227 -0.01765626], shape=(10,), dtype=float32)"
celts,"tf.Tensor(
[ 0.0533097   0.12259747 -0.09085338 -0.05683419  0.03853541  0.05123122
  0.06561983  0.0168556   0.01023313  0.02755301], shape=(10,), dtype=float32)"
ancient,"tf.Tensor(
[-0.09461772 -0.02188022  0.09036288 -0.0020667   0.06481984  0.08495051
  0.01129384 -0.00445406 -0.025037   -0.02842935], shape=(10,), dtype=float32)"
macedonians,"tf.Tensor(
[ 0.03327214 -0.00117361  0.07934343 -0.01396627  0.05723482 -0.06005612
  0.02535396 -0.10042517  0.03884869 -0.05339493], shape=(10,), dtype=float32)"
stability,"tf.Tensor(
[ 0.00839898  0.04226534  0.08972463 -0.01090343  0.00829204 -0.00778204
 -0.0234677  -0.02943041  0.01779107 -0.04507919], shape=(10,), dtype=float32)"
came,"tf.Tensor(
[-0.06338633 -0.04001175 -0.01129141  0.05750553 -0.05482653 -0.02749716
  0.00637181  0.01967738  0.056041    0.00178651], shape=(10,), dtype=float32)"
when,"tf.Tensor(
[ 0.01096242  0.09095956  0.02260588  0.04287113 -0.01229262  0.00792516
 -0.15956156 -0.01532574 -0.00351187  0.02760717], shape=(10,), dtype=float32)"
roman,"tf.Tensor(
[-0.0021291   0.03492981  0.03666212  0.06937975 -0.01783677 -0.11136181
  0.06771227  0.02725955  0.04342892 -0.08931324], shape=(10,), dtype=float32)"
empire,"tf.Tensor(
[ 0.01547119  0.00760545 -0.05503022 -0.00333247  0.0216058  -0.04004703
  0.00098458  0.01625489 -0.04910778 -0.07097592], shape=(10,), dtype=float32)"
conquered,"tf.Tensor(
[-0.09856399  0.0519807   0.07521976 -0.0482973  -0.04416881 -0.05799936
  0.00812783  0.02899314  0.02280433  0.00108406], shape=(10,), dtype=float32)"
ad,"tf.Tensor(
[ 0.03042346 -0.04383627  0.08582254  0.12088855 -0.01503092  0.1107349
 -0.03046663  0.035648   -0.100204    0.04281439], shape=(10,), dtype=float32)"
45,"tf.Tensor(
[ 0.0353566   0.01861732 -0.02340276 -0.00295547  0.06512079 -0.0188667
  0.05051342  0.0174859   0.07086258 -0.02477981], shape=(10,), dtype=float32)"
eastern,"tf.Tensor(
[-0.0800648  -0.00556994  0.00880181  0.00590998 -0.00652003  0.08236686
 -0.08519496 -0.00545009 -0.02747892  0.02436422], shape=(10,), dtype=float32)"
or,"tf.Tensor(
[ 0.05270906 -0.01369882 -0.00440443 -0.0194453  -0.02733765  0.08765931
 -0.01674764 -0.01640119  0.00745515  0.05561735], shape=(10,), dtype=float32)"
byzantine,"tf.Tensor(
[-0.00546245  0.01929555 -0.03731826  0.09184938 -0.06266633  0.03687648
  0.01732816  0.0058323  -0.02162019 -0.02112804], shape=(10,), dtype=float32)"
lost,"tf.Tensor(
[ 0.06533961  0.03609261  0.11698273  0.00455856 -0.05042352  0.07112921
  0.0848968   0.00825669  0.0702519  -0.00756547], shape=(10,), dtype=float32)"
some,"tf.Tensor(
[ 0.00393257 -0.07093205 -0.00571485  0.03264945 -0.01288356  0.04283154
 -0.02957216  0.03388191 -0.02877511  0.0273824 ], shape=(10,), dtype=float32)"
these,"tf.Tensor(
[ 0.02926175  0.01410346  0.0534825   0.03381566  0.05517172 -0.01754193
  0.04512242 -0.01131665  0.02985134 -0.03136287], shape=(10,), dtype=float32)"
territories,"tf.Tensor(
[ 0.06469877  0.02019197 -0.02687333 -0.01036978  0.00768213 -0.04900983
  0.0111015  -0.02959383 -0.0314391   0.00742575], shape=(10,), dtype=float32)"
an,"tf.Tensor(
[ 0.09779197  0.02798169 -0.03593393  0.07886506 -0.06038809 -0.0309806
  0.0009762  -0.05372545 -0.03497281  0.10007656], shape=(10,), dtype=float32)"
invading,"tf.Tensor(
[ 0.02533483 -0.01039981  0.04057682 -0.0282492  -0.03569672 -0.01646611
 -0.03362289  0.06425509 -0.04174178  0.12230092], shape=(10,), dtype=float32)"
bulgar,"tf.Tensor(
[ 0.00671572 -0.03994966 -0.04257901 -0.03346796  0.11736133  0.04499111
  0.00227611  0.0305855   0.03187668 -0.01226498], shape=(10,), dtype=float32)"
horde,"tf.Tensor(
[ 0.07722945  0.06396397  0.01727855  0.04407794  0.03525508  0.03644497
  0.03889243 -0.02503617 -0.10384864  0.02207426], shape=(10,), dtype=float32)"
late,"tf.Tensor(
[ 0.02755282  0.01270517 -0.05329815  0.00337594  0.0934327   0.02510817
  0.00885379  0.0439611  -0.1026529  -0.05906627], shape=(10,), dtype=float32)"
7th,"tf.Tensor(
[-0.0265028  -0.00154248 -0.0002921  -0.04971165  0.01917225  0.00097414
  0.04076159  0.08005506  0.00017501 -0.02173595], shape=(10,), dtype=float32)"
bulgars,"tf.Tensor(
[ 0.02455726 -0.00496967 -0.06444858  0.04025438 -0.04333925  0.02577459
 -0.03587911  0.04106836  0.00655636 -0.04100279], shape=(10,), dtype=float32)"
founded,"tf.Tensor(
[ 0.06208213  0.06802027  0.02652627 -0.03822529 -0.00853941  0.03822318
 -0.06827043  0.04925832  0.0079915  -0.00295939], shape=(10,), dtype=float32)"
first,"tf.Tensor(
[-0.09616935 -0.0304762  -0.05333855  0.00116799  0.01558051 -0.06578768
  0.07887603 -0.02041816  0.01775761 -0.08063258], shape=(10,), dtype=float32)"
681,"tf.Tensor(
[-0.03050648 -0.00857933  0.01130826  0.00228311 -0.05534109 -0.00855079
  0.02021138  0.02611039  0.00686696  0.05871379], shape=(10,), dtype=float32)"
dominated,"tf.Tensor(
[ 0.12014952 -0.0951072  -0.06840393 -0.00980829 -0.02514413  0.02531595
 -0.1141084  -0.05111906 -0.02368002  0.00245838], shape=(10,), dtype=float32)"
most,"tf.Tensor(
[ 0.00298308  0.04667449 -0.07209216  0.01488901 -0.00155057 -0.03556074
  0.02794855 -0.04968524 -0.02295269 -0.01643623], shape=(10,), dtype=float32)"
balkans,"tf.Tensor(
[ 0.03344447  0.05976686 -0.02226784 -0.0035055   0.0067904   0.04648123
 -0.05996301 -0.05896545  0.00111318 -0.06277411], shape=(10,), dtype=float32)"
significantly,"tf.Tensor(
[-0.07482134  0.02628583 -0.00266864 -0.10414422  0.01838402  0.01956803
  0.09869385 -0.02505014  0.00238     0.00907299], shape=(10,), dtype=float32)"
influenced,"tf.Tensor(
[-0.10249547 -0.03157781  0.02103224 -0.09999968 -0.00277937  0.02325522
  0.08363041  0.01682153 -0.00445252 -0.00385176], shape=(10,), dtype=float32)"
slavic,"tf.Tensor(
[ 0.05077321 -0.04414535 -0.02395013  0.0087554   0.04013305 -0.04494515
  0.04997246 -0.02879104  0.00400016 -0.04691729], shape=(10,), dtype=float32)"
cultures,"tf.Tensor(
[ 0.08372513 -0.03273877  0.11867625  0.03624947  0.06093396  0.00437696
 -0.07281384  0.02113171  0.01995072  0.00808727], shape=(10,), dtype=float32)"
developing,"tf.Tensor(
[ 0.06405985 -0.0776974   0.00938244 -0.0078761  -0.02538032  0.07081963
 -0.04672422 -0.04731988  0.03902378  0.0401874 ], shape=(10,), dtype=float32)"
cyrillic,"tf.Tensor(
[ 0.08463474 -0.0707703   0.04321853 -0.01064548  0.01133105 -0.03287306
 -0.0384668  -0.01531892 -0.02520101 -0.00640565], shape=(10,), dtype=float32)"
script,"tf.Tensor(
[ 0.03086067 -0.0189193   0.0008912  -0.03229009  0.07478736 -0.0151071
 -0.10356211  0.00508951  0.00976806  0.06427699], shape=(10,), dtype=float32)"
this,"tf.Tensor(
[-0.00619579 -0.04385499 -0.03213064  0.00210789 -0.03451892 -0.05686258
  0.10117035  0.03518517  0.02387912  0.03745711], shape=(10,), dtype=float32)"
state,"tf.Tensor(
[-0.02023887  0.00289692  0.01742645 -0.04086951  0.00419242 -0.0170294
  0.04746848  0.03591901  0.07009599  0.04038443], shape=(10,), dtype=float32)"
lasted,"tf.Tensor(
[-0.00650725  0.1162511  -0.00872705  0.04082537  0.03341685  0.01502185
 -0.00628674  0.03433877 -0.0051606  -0.03363739], shape=(10,), dtype=float32)"
until,"tf.Tensor(
[ 0.03599054 -0.02582142  0.02226532  0.04129926  0.00745141  0.10935117
  0.05949373  0.03956784  0.00341924  0.02000115], shape=(10,), dtype=float32)"
early,"tf.Tensor(
[-0.05495372 -0.01727657  0.00748802  0.0168589   0.00948556 -0.07377705
 -0.0482903   0.03289386  0.03981242  0.08824148], shape=(10,), dtype=float32)"
11th,"tf.Tensor(
[ 1.7173292e-02 -2.8168054e-02 -8.2933297e-03  2.7199224e-02
  4.5048306e-05 -5.0618965e-02  1.3248947e-02 -5.2459245e-03
  8.4633358e-02  4.8154771e-02], shape=(10,), dtype=float32)"
emperor,"tf.Tensor(
[-0.05051448 -0.03563991  0.01031098  0.08454192  0.06361748  0.03173845
 -0.06128813 -0.01508917  0.00226972  0.05092067], shape=(10,), dtype=float32)"
basil,"tf.Tensor(
[-0.00082198  0.06399182  0.02227649 -0.03650386  0.03711021  0.03582164
 -0.0195734   0.02659178  0.00105666  0.05317426], shape=(10,), dtype=float32)"
ii,"tf.Tensor(
[-0.0401414   0.10700864  0.05633384  0.05510234 -0.02107005 -0.00744854
 -0.01433217 -0.06450856  0.00055696 -0.02441306], shape=(10,), dtype=float32)"
dismantled,"tf.Tensor(
[-0.01211479  0.00122394 -0.04085156 -0.07299263  0.0071787  -0.01043667
 -0.02890837  0.0049129  -0.01008025 -0.07518323], shape=(10,), dtype=float32)"
successful,"tf.Tensor(
[ 0.04968256  0.01902231 -0.00082074  0.00193905  0.04490995  0.01146665
 -0.02001424 -0.00644485  0.01745112  0.02161187], shape=(10,), dtype=float32)"
revolt,"tf.Tensor(
[-0.05052498 -0.00572539 -0.03503672  0.02427133  0.05071539  0.02766062
 -0.04493205  0.01217464  0.03323634 -0.07206033], shape=(10,), dtype=float32)"
1185,"tf.Tensor(
[ 0.02724509 -0.11454488 -0.00254683 -0.07060074  0.0236382   0.03174267
 -0.04770062  0.0442609   0.04088009 -0.05446588], shape=(10,), dtype=float32)"
established,"tf.Tensor(
[-0.02387254  0.01654842  0.03252655 -0.0076601  -0.00184246  0.01544977
 -0.01127765 -0.06643862  0.02368536 -0.00725765], shape=(10,), dtype=float32)"
second,"tf.Tensor(
[ 0.04675249 -0.01702779 -0.0609762  -0.03495582  0.05615108 -0.0207885
  0.12882777 -0.02177837  0.0071035   0.10810282], shape=(10,), dtype=float32)"
reached,"tf.Tensor(
[ 0.03804101 -0.00248225 -0.02420054  0.11578076  0.07314708  0.00095427
 -0.04614495  0.05522926 -0.04432285  0.03486857], shape=(10,), dtype=float32)"
its,"tf.Tensor(
[-0.04958379  0.11671904 -0.04887295 -0.03698379  0.09020927  0.01616818
  0.00529973 -0.02483684 -0.00648533  0.09618163], shape=(10,), dtype=float32)"
apex,"tf.Tensor(
[ 0.05788274 -0.06009683 -0.04854142  0.05113578 -0.01083672  0.09386288
  0.02725858  0.05558473 -0.07006926 -0.07224476], shape=(10,), dtype=float32)"
under,"tf.Tensor(
[ 0.02957476 -0.05642898  0.03248235  0.02011134  0.08249126 -0.00591801
 -0.08832277 -0.04804256 -0.04771204  0.01238099], shape=(10,), dtype=float32)"
ivan,"tf.Tensor(
[ 0.03538922 -0.00463417  0.02400345 -0.06335815  0.11812317  0.00574697
  0.04884111  0.01304268 -0.00466206 -0.04591343], shape=(10,), dtype=float32)"
asen,"tf.Tensor(
[ 0.05830112 -0.14552432  0.07326487  0.01761975  0.06681301 -0.01493625
 -0.05277884 -0.04786946  0.0340478  -0.02312977], shape=(10,), dtype=float32)"
12181241,"tf.Tensor(
[ 0.00163714  0.05333396 -0.02479406 -0.03927155 -0.02307963  0.1379802
 -0.04609681  0.00494102  0.02387795 -0.04283737], shape=(10,), dtype=float32)"
after,"tf.Tensor(
[-0.01458854  0.00381031  0.0203937  -0.02387486 -0.00872237 -0.0118637
 -0.0174345  -0.00167735  0.02641178  0.09277264], shape=(10,), dtype=float32)"
numerous,"tf.Tensor(
[-0.0849201  -0.00789144 -0.04373874 -0.01900776  0.00817426 -0.00417659
  0.03581731  0.03330949 -0.01418355  0.01175183], shape=(10,), dtype=float32)"
exhausting,"tf.Tensor(
[ 0.03599147  0.00574695  0.05355392  0.01032477  0.04032285 -0.11296013
 -0.10585143 -0.00791424 -0.04977209 -0.00401532], shape=(10,), dtype=float32)"
wars,"tf.Tensor(
[ 0.02398067 -0.03245234 -0.03524332 -0.03343828  0.01714761  0.0039697
 -0.05732243  0.06741221  0.0097477  -0.05782386], shape=(10,), dtype=float32)"
feudal,"tf.Tensor(
[ 0.05168011 -0.04318567  0.01819053  0.01554624  0.05534212  0.03448213
 -0.04491174  0.08461751  0.06985682 -0.06043364], shape=(10,), dtype=float32)"
strife,"tf.Tensor(
[-0.02883571  0.04861663 -0.02122237  0.03004364  0.01344546 -0.04262669
  0.01129029  0.01047542  0.04305723  0.04334702], shape=(10,), dtype=float32)"
disintegrated,"tf.Tensor(
[-0.08432993  0.12452509 -0.03176988  0.02377198  0.01943813 -0.07531124
 -0.02418339 -0.01904131  0.1376507  -0.02991464], shape=(10,), dtype=float32)"
1396,"tf.Tensor(
[ 0.00968983 -0.0017737   0.03269635 -0.05263689  0.03061065  0.01205984
  0.13209398  0.0194365  -0.02558224 -0.07071257], shape=(10,), dtype=float32)"
fell,"tf.Tensor(
[-0.04539791  0.01754965  0.16106941 -0.02195938  0.10100647  0.0485203
  0.01100643  0.05166769 -0.05902564  0.01958369], shape=(10,), dtype=float32)"
ottoman,"tf.Tensor(
[ 0.02015293  0.02054198  0.02742411  0.04094902  0.02106651  0.00733185
 -0.08419036  0.0442004  -0.02089944  0.06239899], shape=(10,), dtype=float32)"
rule,"tf.Tensor(
[-0.08555003 -0.03499763 -0.00845747  0.07810986  0.04372963  0.03815183
  0.07900275 -0.00487158  0.06840805  0.03590167], shape=(10,), dtype=float32)"
nearly,"tf.Tensor(
[-0.00259773 -0.08838982  0.01488522  0.05583803  0.06281236 -0.04502396
  0.02832858  0.08188754 -0.06523082  0.08224228], shape=(10,), dtype=float32)"
five,"tf.Tensor(
[ 0.06769314 -0.02770597  0.01322754 -0.03072024  0.002037   -0.0363403
 -0.02146402 -0.03038647  0.06299657  0.02120666], shape=(10,), dtype=float32)"
centuries,"tf.Tensor(
[-0.00042152  0.01710595 -0.00158814 -0.01461495  0.02848732  0.03113712
 -0.00691426  0.03171955 -0.07761664 -0.07202279], shape=(10,), dtype=float32)"
russoturkish,"tf.Tensor(
[ 0.02074321  0.03737188 -0.10493116  0.01037461 -0.0226251  -0.04561885
 -0.03641015 -0.06900518  0.01582344 -0.00176141], shape=(10,), dtype=float32)"
war,"tf.Tensor(
[-0.10790131 -0.03584467  0.02977524  0.04452576  0.06328534  0.08026184
 -0.00187632 -0.01575974 -0.01989143  0.04709964], shape=(10,), dtype=float32)"
187778,"tf.Tensor(
[ 0.05851492  0.00279723  0.093593    0.11254105 -0.0501694   0.01823937
  0.07309551  0.05294457 -0.00048611 -0.05623876], shape=(10,), dtype=float32)"
resulted,"tf.Tensor(
[ 0.01764451  0.04861432 -0.03428276 -0.00994646  0.03094481  0.05576996
  0.0208308   0.09069082  0.0362852  -0.06804124], shape=(10,), dtype=float32)"
formation,"tf.Tensor(
[-0.01327319  0.01147151 -0.02197822  0.02791138 -0.01196987  0.06585793
 -0.0206038   0.10368424 -0.0313696  -0.05149944], shape=(10,), dtype=float32)"
current,"tf.Tensor(
[ 9.1811642e-02 -7.4784133e-05  8.5865669e-02 -6.5639764e-02
  3.4384190e-03 -2.0424565e-02  5.8835089e-02 -1.3139731e-01
 -1.1741569e-02  1.0691748e-02], shape=(10,), dtype=float32)"
third,"tf.Tensor(
[ 0.10679173 -0.01167843  0.07413723  0.01167882 -0.08070904  0.02878118
  0.02450703 -0.00669114 -0.02307804  0.01795632], shape=(10,), dtype=float32)"
many,"tf.Tensor(
[-0.03488991  0.06838937 -0.05408843  0.0795894   0.06900404  0.05667143
 -0.11690064  0.01712399  0.03862993  0.01665366], shape=(10,), dtype=float32)"
ethnic,"tf.Tensor(
[ 0.10519966 -0.06127614  0.00837593  0.0274213  -0.01281772 -0.06113727
  0.03191364  0.02590602 -0.02487996  0.0180161 ], shape=(10,), dtype=float32)"
populations,"tf.Tensor(
[-0.01596655  0.0242627   0.00293044  0.01573301 -0.08475496 -0.0166621
  0.06908199  0.01794215 -0.10950372  0.00212831], shape=(10,), dtype=float32)"
were,"tf.Tensor(
[ 0.02264564  0.00303954  0.01205185 -0.01392075  0.12962109 -0.05319506
  0.08414637  0.03292553  0.03037726  0.05586134], shape=(10,), dtype=float32)"
left,"tf.Tensor(
[ 0.02524877 -0.05440308  0.06978005 -0.05344056  0.02265685  0.00074568
  0.0129099   0.03705129  0.02884202  0.02747687], shape=(10,), dtype=float32)"
outside,"tf.Tensor(
[-0.02394535 -0.05259044 -0.03911465  0.05609008  0.00866222 -0.05180914
 -0.05417822  0.05779986  0.05866744  0.01215013], shape=(10,), dtype=float32)"
borders,"tf.Tensor(
[ 0.00060307  0.0397416  -0.01770262 -0.00398089 -0.04097143 -0.03870893
  0.01944393  0.02720443 -0.06305581  0.00291747], shape=(10,), dtype=float32)"
led,"tf.Tensor(
[ 0.06594159  0.08105654  0.01273466 -0.07958468  0.11815856 -0.03116598
 -0.00170885 -0.00623722  0.01418421 -0.09037022], shape=(10,), dtype=float32)"
several,"tf.Tensor(
[-0.00358902 -0.05610308 -0.0131123   0.02394813 -0.01612332  0.0415167
 -0.05598062  0.03091532 -0.0431307   0.08830106], shape=(10,), dtype=float32)"
conflicts,"tf.Tensor(
[-0.0823742  -0.03493277  0.02176707 -0.00376181  0.02773831  0.07311703
  0.01543564 -0.05800499 -0.01716352  0.01194676], shape=(10,), dtype=float32)"
neighbours,"tf.Tensor(
[-0.00369598  0.0324729  -0.06440204  0.08992551 -0.00688349  0.00240928
 -0.04946859 -0.04190491  0.06985709 -0.03718865], shape=(10,), dtype=float32)"
alliance,"tf.Tensor(
[-0.0311039  -0.03696372 -0.00543533 -0.04345553 -0.01911802  0.11767104
 -0.05716851  0.02562544 -0.00563392  0.00346922], shape=(10,), dtype=float32)"
germany,"tf.Tensor(
[-0.08462111 -0.01149598 -0.00679592  0.00397531 -0.00293165  0.10093539
 -0.02160343 -0.04050393  0.03035852  0.07457448], shape=(10,), dtype=float32)"
both,"tf.Tensor(
[ 0.0410453   0.03488187  0.08035665 -0.03136184  0.0450133  -0.07171322
  0.02161069  0.07306909 -0.06609088  0.08560036], shape=(10,), dtype=float32)"
world,"tf.Tensor(
[ 0.01886357 -0.03912794  0.00249048  0.01095646 -0.0389193  -0.00838849
 -0.03629563  0.10742244  0.06267544 -0.04367193], shape=(10,), dtype=float32)"
1946,"tf.Tensor(
[ 0.02338044  0.00766839 -0.09069285  0.00086691  0.06505322  0.09975754
 -0.02096258  0.00896697 -0.04684462  0.05808726], shape=(10,), dtype=float32)"
became,"tf.Tensor(
[-0.03502802  0.01911041 -0.02577682  0.01126777 -0.07987449 -0.00861196
  0.03675252 -0.03150329  0.12002007 -0.02639348], shape=(10,), dtype=float32)"
oneparty,"tf.Tensor(
[ 0.09984656  0.00756631  0.04488067 -0.0050872  -0.0708342  -0.03085037
 -0.05689922  0.04689294 -0.07934159  0.02720424], shape=(10,), dtype=float32)"
socialist,"tf.Tensor(
[-0.01108619 -0.00773143  0.01791333  0.09051482  0.05176299 -0.03909457
 -0.04156718 -0.01076562 -0.02833911 -0.01824265], shape=(10,), dtype=float32)"
part,"tf.Tensor(
[ 0.00592889 -0.14103396 -0.05279436  0.03585036  0.10161177  0.06750809
 -0.03164114 -0.01316324 -0.11469289  0.04202434], shape=(10,), dtype=float32)"
sovietled,"tf.Tensor(
[-0.03132627  0.06875363 -0.02124481  0.02900813 -0.00304565 -0.01751456
 -0.06003673  0.02671959 -0.0492234  -0.07886636], shape=(10,), dtype=float32)"
bloc,"tf.Tensor(
[-0.05662622 -0.07459131  0.07258112 -0.06754827 -0.04253988 -0.0640124
 -0.01481311 -0.06873924  0.0257007  -0.01434151], shape=(10,), dtype=float32)"
ruling,"tf.Tensor(
[-0.02208622  0.02140646  0.01489769 -0.00588112 -0.04397213  0.04503347
  0.01243221 -0.03305276  0.01353981 -0.00230219], shape=(10,), dtype=float32)"
communist,"tf.Tensor(
[ 0.07070806  0.08552781 -0.07107641 -0.03444809  0.01448934  0.06121272
 -0.04564045 -0.01339312  0.02061761 -0.10222312], shape=(10,), dtype=float32)"
party,"tf.Tensor(
[ 0.01165279 -0.09557253  0.10014413  0.04916573 -0.00125449  0.06954765
  0.03016392  0.0334423   0.01036039 -0.04013472], shape=(10,), dtype=float32)"
gave,"tf.Tensor(
[-0.01644787 -0.02021738 -0.00030748 -0.02841121 -0.00082174  0.03024245
  0.04516542 -0.02936639  0.01450759  0.06062263], shape=(10,), dtype=float32)"
up,"tf.Tensor(
[-0.04895054  0.02434487  0.0169841  -0.00511709  0.00093994 -0.01683882
  0.01130559 -0.01949492  0.06042572 -0.00219603], shape=(10,), dtype=float32)"
monopoly,"tf.Tensor(
[ 0.00745812  0.09428235  0.07265281  0.02156147 -0.05790416  0.02506091
  0.01233076  0.01136327  0.01879925  0.02403933], shape=(10,), dtype=float32)"
on,"tf.Tensor(
[ 0.04154829 -0.08357478 -0.0038468   0.05922455 -0.00798196 -0.06107754
 -0.01527625  0.07500419 -0.02205336 -0.02096794], shape=(10,), dtype=float32)"
power,"tf.Tensor(
[ 0.01219714 -0.05828153  0.05134956 -0.03354385  0.04165462  0.03211325
  0.00316619  0.10799547 -0.04562335  0.01002462], shape=(10,), dtype=float32)"
revolutions,"tf.Tensor(
[ 0.01401771 -0.00037053 -0.06695446 -0.05072837 -0.07943555  0.07932233
 -0.10687394  0.0031155  -0.00950938 -0.08162772], shape=(10,), dtype=float32)"
1989,"tf.Tensor(
[ 0.05738819  0.03217313  0.02628767  0.02018737 -0.08255416  0.06021994
 -0.02006821 -0.04808385 -0.09970174 -0.03948086], shape=(10,), dtype=float32)"
allowed,"tf.Tensor(
[-0.02335707 -0.06064987  0.05509841  0.00039494  0.05453435 -0.03215398
 -0.00748686  0.02485284 -0.07084673  0.11561047], shape=(10,), dtype=float32)"
multiparty,"tf.Tensor(
[-0.00279199  0.00541925 -0.04128465  0.05557373 -0.00269162  0.03931743
 -0.03952503  0.00498148 -0.02172873 -0.02288139], shape=(10,), dtype=float32)"
elections,"tf.Tensor(
[ 4.9801592e-02 -6.4399458e-02 -4.4322576e-05 -4.9114201e-02
 -6.8300843e-02  1.0077515e-02 -6.1383382e-03  1.7381376e-02
  3.3777926e-02 -4.7173020e-03], shape=(10,), dtype=float32)"
then,"tf.Tensor(
[ 0.06998508  0.05097735 -0.115872   -0.04422423 -0.03180027  0.00755806
 -0.1005869   0.04837488 -0.01248065  0.00628534], shape=(10,), dtype=float32)"
transitioned,"tf.Tensor(
[-0.01690401 -0.05073507  0.00363114  0.03099626 -0.07943894 -0.02864066
 -0.03648045 -0.08322817  0.04071707 -0.01986851], shape=(10,), dtype=float32)"
into,"tf.Tensor(
[-0.05520141  0.03023613  0.04579019 -0.09703995  0.00488698  0.0687858
  0.03366358 -0.1241378   0.05707416  0.05880062], shape=(10,), dtype=float32)"
democracy,"tf.Tensor(
[-0.03521441  0.00387981  0.07051475 -0.03344891  0.05276543  0.0522842
 -0.00231272 -0.05201089 -0.06416197  0.08064938], shape=(10,), dtype=float32)"
marketbased,"tf.Tensor(
[-0.00466679 -0.07477669 -0.05425609 -0.00346753 -0.02978626 -0.00129045
  0.01541356 -0.09585889 -0.01765925  0.03839441], shape=(10,), dtype=float32)"
economy,"tf.Tensor(
[ 0.07337633  0.00678559  0.03174346  0.03592818 -0.07933474  0.01275163
  0.07519142  0.09853595 -0.0569988  -0.02571851], shape=(10,), dtype=float32)"
since,"tf.Tensor(
[ 0.01090722  0.02090572  0.05769421 -0.02636308  0.03804348  0.03452811
  0.01275724  0.00155966 -0.05763701 -0.05275349], shape=(10,), dtype=float32)"
adopting,"tf.Tensor(
[-0.03244667  0.02305425  0.03919877  0.03540378  0.0092336  -0.00925915
 -0.01290688  0.00479174  0.04567328 -0.07299554], shape=(10,), dtype=float32)"
democratic,"tf.Tensor(
[ 0.10328766 -0.13214862  0.06157184 -0.01398736  0.01706173 -0.03318108
 -0.01367474  0.03105079  0.01652155 -0.10553682], shape=(10,), dtype=float32)"
constitution,"tf.Tensor(
[-0.03000095  0.12627047 -0.03821357 -0.00369541  0.09705304 -0.02766533
 -0.02974504 -0.09290035  0.03257637 -0.02287533], shape=(10,), dtype=float32)"
1991,"tf.Tensor(
[ 0.0184068  -0.01012479  0.02649463 -0.04562256  0.0323143   0.04329489
  0.1173302  -0.02320818  0.01544858 -0.08406834], shape=(10,), dtype=float32)"
sovereign,"tf.Tensor(
[ 0.04665236 -0.03431242 -0.1329877   0.02413649 -0.0208577   0.02158384
  0.05304739 -0.01086814  0.0078618   0.0033896 ], shape=(10,), dtype=float32)"
has,"tf.Tensor(
[-0.03092943  0.0744968   0.02576749  0.05422915 -0.02234455 -0.02157084
 -0.07837413  0.00926143  0.04815164  0.09517375], shape=(10,), dtype=float32)"
been,"tf.Tensor(
[ 0.0279881   0.00995008  0.00253918 -0.01774341 -0.05508108  0.00945609
 -0.07299961 -0.00125006  0.03383155  0.05371445], shape=(10,), dtype=float32)"
unitary,"tf.Tensor(
[-0.00631388  0.00193258 -0.04700175  0.04509551  0.0528376  -0.05125192
 -0.03755431  0.03215349  0.0949291  -0.04124315], shape=(10,), dtype=float32)"
parliamentary,"tf.Tensor(
[-0.06637213 -0.03670494 -0.03897829 -0.04821423 -0.00016239  0.06462486
  0.03810705  0.10008985 -0.0042568   0.0008075 ], shape=(10,), dtype=float32)"
high,"tf.Tensor(
[-0.02592678 -0.11711287  0.02301698  0.06890676 -0.08362681 -0.00956294
 -0.00977692  0.04064174 -0.03127516  0.08490542], shape=(10,), dtype=float32)"
degree,"tf.Tensor(
[ 0.09299064  0.11681493  0.03507037 -0.06704635 -0.02831356  0.10600324
  0.01662189  0.07670566 -0.01634246 -0.02525391], shape=(10,), dtype=float32)"
political,"tf.Tensor(
[-0.00916762  0.08269075 -0.03810155 -0.09291877  0.02563722 -0.08670092
 -0.02426342 -0.02654714 -0.0133028   0.03260329], shape=(10,), dtype=float32)"
administrative,"tf.Tensor(
[-0.00655973  0.02791621  0.01979905 -0.03558902 -0.0203004   0.03010514
  0.09472267 -0.00767843 -0.0241969  -0.03291772], shape=(10,), dtype=float32)"
economic,"tf.Tensor(
[-0.01667101 -0.05116802 -0.04085233 -0.05260764  0.03486863  0.0201377
  0.04067808  0.04714115 -0.02150695  0.07000688], shape=(10,), dtype=float32)"
centralisation,"tf.Tensor(
[-0.09995479  0.00422314  0.00292261  0.02407884  0.10881177 -0.02368924
  0.02238425 -0.03965569 -0.08364818  0.01043011], shape=(10,), dtype=float32)"
population,"tf.Tensor(
[ 0.01784121  0.09046382  0.01911002  0.04893359  0.04771475  0.0318729
  0.04132619 -0.04611351 -0.11398661 -0.04737228], shape=(10,), dtype=float32)"
seven,"tf.Tensor(
[ 0.12862839 -0.08839101 -0.038145    0.03670336  0.06107265 -0.01826698
 -0.03749366 -0.0119889  -0.02664352 -0.00808561], shape=(10,), dtype=float32)"
million,"tf.Tensor(
[ 0.03785039  0.01722301  0.10127307 -0.06825579  0.0910777   0.02527352
  0.02319175  0.03284227 -0.04730028 -0.10984638], shape=(10,), dtype=float32)"
resides,"tf.Tensor(
[-0.03368735  0.02102162  0.05024819  0.06291346  0.03272371 -0.01331528
  0.05986086 -0.05322998 -0.02755435  0.01081908], shape=(10,), dtype=float32)"
mainly,"tf.Tensor(
[ 0.01047304  0.00528042 -0.03289482 -0.01088256  0.01486418  0.01452691
  0.00337039  0.02775589 -0.00974426 -0.02857008], shape=(10,), dtype=float32)"
27,"tf.Tensor(
[-0.00788579 -0.01140339 -0.00504149  0.14590865 -0.00289428 -0.04682463
 -0.00943234  0.01370269 -0.00687004 -0.10636688], shape=(10,), dtype=float32)"
provinces,"tf.Tensor(
[ 0.01757149 -0.02582424  0.0255252   0.02430904 -0.01404464  0.03002661
 -0.03943022  0.00608297 -0.05789473 -0.09168287], shape=(10,), dtype=float32)"
declined,"tf.Tensor(
[-0.00399121 -0.05046509  0.07611917  0.06913108 -0.09519461  0.04757087
 -0.01599913  0.01255971  0.02821164 -0.00849005], shape=(10,), dtype=float32)"
1980s,"tf.Tensor(
[ 0.03924865 -0.00014505 -0.02516787  0.02033208 -0.12297821  0.05390489
 -0.00136274 -0.00882583 -0.07238572 -0.04931065], shape=(10,), dtype=float32)"
member,"tf.Tensor(
[-0.00358278  0.02911034 -0.00040006 -0.03376199  0.0660279   0.07005764
  0.01852372  0.08294972 -0.07978742 -0.00965588], shape=(10,), dtype=float32)"
european,"tf.Tensor(
[ 0.00853654  0.01303574 -0.02237294 -0.03695802 -0.01362518 -0.14226007
 -0.03112132 -0.06640279  0.02083998 -0.02371732], shape=(10,), dtype=float32)"
union,"tf.Tensor(
[-0.01793455  0.05898677  0.02450362 -0.07446343  0.03948333  0.06312563
  0.01495555 -0.05474349 -0.06340076 -0.07443824], shape=(10,), dtype=float32)"
nato,"tf.Tensor(
[-0.0296421  -0.0329082   0.08798476 -0.09572449  0.0206779   0.03786529
 -0.07788545  0.0076098   0.03318508 -0.03855598], shape=(10,), dtype=float32)"
council,"tf.Tensor(
[-0.06839558 -0.00623915 -0.10986304 -0.06598683 -0.03572055 -0.00318882
  0.04887008 -0.03908392 -0.13182989  0.03828962], shape=(10,), dtype=float32)"
founding,"tf.Tensor(
[-0.00039668  0.01136904 -0.07892054  0.03482633 -0.01610351 -0.02083448
  0.10713721 -0.06284666 -0.03014044 -0.01078457], shape=(10,), dtype=float32)"
organization,"tf.Tensor(
[-0.05847234 -0.00762543 -0.03590303  0.0176168   0.11546589 -0.01356908
  0.07084299  0.02737956 -0.04556535 -0.04272169], shape=(10,), dtype=float32)"
security,"tf.Tensor(
[ 0.03704683 -0.02492672  0.03668821 -0.15869962  0.01908808  0.13156958
  0.00817926  0.01241889 -0.05898663  0.02863915], shape=(10,), dtype=float32)"
cooperation,"tf.Tensor(
[ 0.0541503   0.10159231 -0.00671655 -0.01167208 -0.01110261  0.00151305
  0.05655893  0.02308066 -0.04567204 -0.01397595], shape=(10,), dtype=float32)"
osce,"tf.Tensor(
[-0.05098822 -0.0465463  -0.00862912  0.07275766  0.07440638 -0.14038174
 -0.01159793 -0.07461718 -0.01699471 -0.0176548 ], shape=(10,), dtype=float32)"
taken,"tf.Tensor(
[-0.0450724   0.03786702 -0.05983703  0.01923856  0.02837986  0.02665921
  0.03134106  0.07002162 -0.02257224  0.01314931], shape=(10,), dtype=float32)"
seat,"tf.Tensor(
[-0.03697141  0.00676665  0.01059867 -0.00419123  0.02638321 -0.00846979
  0.01735571 -0.0068288   0.03306691 -0.0254099 ], shape=(10,), dtype=float32)"
un,"tf.Tensor(
[ 0.01601739 -0.00888918 -0.07636854  0.05347458  0.04111944  0.01048381
 -0.07766742  0.00162388 -0.00946281  0.01057212], shape=(10,), dtype=float32)"
three,"tf.Tensor(
[ 0.00442202 -0.00512063  0.00446046 -0.00113596  0.00243849 -0.0403106
 -0.03396565 -0.01013945 -0.03581379 -0.01826276], shape=(10,), dtype=float32)"
times,"tf.Tensor(
[-0.06626991 -0.02476799 -0.08455092  0.04786993 -0.06194426 -0.00044332
  0.06658952  0.05445767  0.08659185  0.0178101 ], shape=(10,), dtype=float32)"
market,"tf.Tensor(
[-0.02369663 -0.0622852   0.02359261  0.13247877 -0.04842301  0.0122931
  0.00607126 -0.04802677 -0.14155139 -0.00290168], shape=(10,), dtype=float32)"
single,"tf.Tensor(
[-0.08428952  0.02037091  0.04929828 -0.07245296  0.03815695  0.07914707
  0.00320746  0.04790968  0.05601066  0.02796297], shape=(10,), dtype=float32)"
mostly,"tf.Tensor(
[ 0.01593083 -0.0541856  -0.02532513 -0.08902581 -0.0580498   0.04388736
  0.07121602  0.01246055 -0.00250836  0.04525185], shape=(10,), dtype=float32)"
relies,"tf.Tensor(
[-0.05735235  0.06414018  0.00193767 -0.09721974 -0.05121318 -0.01841373
  0.05238645  0.03386516  0.07843944  0.02586659], shape=(10,), dtype=float32)"
services,"tf.Tensor(
[-0.11358006 -0.10169879 -0.01130891  0.07952468  0.00503338  0.01064616
  0.04314836  0.04987388  0.0142231   0.0780587 ], shape=(10,), dtype=float32)"
followed,"tf.Tensor(
[-0.09951545 -0.06431773  0.03369924  0.02006648 -0.03697276 -0.00063794
  0.02164111 -0.0948722   0.0639865  -0.10943981], shape=(10,), dtype=float32)"
industryespecially,"tf.Tensor(
[ 0.02253448  0.07215817 -0.0031472   0.02498067 -0.04931049 -0.05363547
  0.0225586  -0.04575763 -0.00181742  0.00678289], shape=(10,), dtype=float32)"
machine,"tf.Tensor(
[ 0.00084323  0.03997995 -0.07356843  0.00901508  0.08731602 -0.03876786
  0.05674398 -0.03087859 -0.05710887  0.16600388], shape=(10,), dtype=float32)"
building,"tf.Tensor(
[-0.01124375 -0.04653754 -0.06955057  0.00522183 -0.09635337  0.12570867
  0.03949035 -0.05001207  0.04715965 -0.02638888], shape=(10,), dtype=float32)"
miningand,"tf.Tensor(
[ 8.6433394e-03  1.1538250e-02 -4.4566412e-03  2.7242465e-02
 -5.1479701e-02  3.9209563e-02  1.2557876e-02 -4.3042991e-02
  3.8281105e-02  3.9077684e-05], shape=(10,), dtype=float32)"
agriculture,"tf.Tensor(
[-0.04316138  0.06778487  0.07997457 -0.0017422  -0.02062767  0.00213524
  0.07067765  0.03321977 -0.03634343 -0.03355304], shape=(10,), dtype=float32)"
ranks,"tf.Tensor(
[ 0.03347778 -0.12080728  0.0146033   0.02231153 -0.0107491   0.06400241
 -0.08627941 -0.03355069 -0.01723688 -0.0262668 ], shape=(10,), dtype=float32)"
52nd,"tf.Tensor(
[ 0.09082062  0.00076941  0.08643989 -0.01096675  0.00577583  0.02820367
 -0.11251477  0.03845787 -0.01215383  0.01905741], shape=(10,), dtype=float32)"
human,"tf.Tensor(
[ 0.07206389  0.04110842 -0.04220176  0.09292161 -0.05644096  0.02711501
 -0.04981964 -0.00109582 -0.05315753 -0.00868168], shape=(10,), dtype=float32)"
development,"tf.Tensor(
[ 0.04112769 -0.00833371 -0.03319816 -0.02623453 -0.07733335 -0.09355057
  0.0624183   0.03981275  0.00595616 -0.07216247], shape=(10,), dtype=float32)"
index,"tf.Tensor(
[-0.03686655 -0.04229279 -0.04671594 -0.00756767 -0.05282409  0.05039168
 -0.03061113  0.02381866  0.03710578  0.00078209], shape=(10,), dtype=float32)"
lowest,"tf.Tensor(
[-0.00762634  0.01328278  0.04452932  0.06425148  0.03381922 -0.01555153
 -0.05499443  0.02681849  0.01062168 -0.00678132], shape=(10,), dtype=float32)"
rank,"tf.Tensor(
[ 0.05112575 -0.06682885  0.00318624 -0.1062322  -0.0257791   0.05020286
  0.06963943 -0.00997824  0.02230653  0.05332851], shape=(10,), dtype=float32)"
eu,"tf.Tensor(
[-0.09484173  0.04079826  0.09249578  0.02519692  0.09990877 -0.04321722
  0.04942031 -0.0353042  -0.01421066  0.06923031], shape=(10,), dtype=float32)"
alongside,"tf.Tensor(
[-0.04627338  0.10587341 -0.0206239   0.05807716  0.01798157 -0.02465337
 -0.08687828  0.08950604 -0.03261885  0.01304477], shape=(10,), dtype=float32)"
widespread,"tf.Tensor(
[ 0.03253748  0.02102089  0.02372768  0.0249548   0.00067442  0.06740294
  0.00086298  0.0480653   0.01716729 -0.02769131], shape=(10,), dtype=float32)"
corruption,"tf.Tensor(
[-0.06861368 -0.02336355  0.0340884   0.06064553  0.03794651 -0.07825442
  0.01980281  0.01782916  0.03182267 -0.05289173], shape=(10,), dtype=float32)"
socioeconomic,"tf.Tensor(
[-0.04637343  0.09177648 -0.0477526  -0.0157731   0.0692309  -0.03431991
  0.01510786 -0.02170687  0.05907051 -0.00670606], shape=(10,), dtype=float32)"
issue,"tf.Tensor(
[ 0.01369244 -0.03175698  0.09326082 -0.04647615  0.04535459  0.09636516
  0.05950409 -0.04263009 -0.02076292 -0.05331732], shape=(10,), dtype=float32)"
ranked,"tf.Tensor(
[ 0.14765538 -0.02926823  0.01906765 -0.00251209 -0.00821727  0.05146473
 -0.05543498 -0.05958642  0.06500863  0.04604072], shape=(10,), dtype=float32)"
as,"tf.Tensor(
[-0.04346951 -0.01295126  0.05138867 -0.06763262  0.03528978  0.0059665
  0.02151184 -0.05442822 -0.00274018  0.03713381], shape=(10,), dtype=float32)"
corrupt,"tf.Tensor(
[-0.04451931 -0.02465482  0.01685997  0.02188556  0.06318829 -0.01125963
 -0.01658055 -0.10914289 -0.05780502 -0.04410885], shape=(10,), dtype=float32)"
2018,"tf.Tensor(
[-0.03105396  0.03430916  0.07062255  0.04294991  0.03993658 -0.08929586
 -0.02504057  0.03445202  0.02135045  0.02992929], shape=(10,), dtype=float32)"
